<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.ndx</groupId>
	<artifactId>bigquery-binder-example</artifactId>
	<version>0.1.1-SNAPSHOT</version>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
		<kafka.mode>rabbit-to-bigquery</kafka.mode><!-- This mode is defined by the 
			enforcer plugin. -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-bigquery</artifactId>
			<version>1.59.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-schema</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-kafka</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-test-support</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
		<repository>
			<id>releases</id>
			<name>Adeo Maven Release</name>
			<url>http://nexus.adeo.com:8083/nexus/content/repositories/releases</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Adeo Maven Release</name>
			<url>http://nexus.adeo.com:8083/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Adeo Maven Snapshots</name>
			<url>http://nexus.adeo.com:8083/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<scm>
		<connection>scm:git:https://gitlab.adeo.com/sirius/infrastructure/bigquery-binder-example.git</connection>
		<developerConnection>scm:git:https://gitlab.adeo.com/sirius/infrastructure/bigquery-binder-example.git</developerConnection>
		<url>scm:git:https://gitlab.adeo.com/sirius/infrastructure/bigquery-binder-example.git</url>
		<tag>HEAD</tag>
	</scm>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- Documentation is available there https://github.com/dkanejs/docker-compose-maven-plugin -->
					<groupId>com.dkanejs.maven.plugins</groupId>
					<artifactId>docker-compose-maven-plugin</artifactId>
					<version>2.2.0</version>
					<configuration>
						<composeFile>${project.build.directory}/config/docker-compose.yml</composeFile>
						<detachedMode>true</detachedMode>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>
						-Xdebug
						-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
					</jvmArguments>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-kafka-mode</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireProperty>
									<property>kafka.mode</property>
									<message><![CDATA[kafka mode can be either localhost or aiven. Any other value is forbidden]]></message>
									<regex>^(rabbit-to-bigquery|rabbit-to-kafka|kafka-to-bigquery|aiven)$</regex>
								</requireProperty>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-bigquery-binder-example-resources</id>
						<!-- here the phase you need -->
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<delimiters>
								<delimiter>${*}</delimiter>
								<delimiter>@</delimiter>
							</delimiters>
							<outputDirectory>${project.build.directory}/config</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/config/common</directory>
									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>src/main/config/${kafka.mode}</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-bigquery-binder-example-application-config</id>
						<!-- here the phase you need -->
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<delimiters>
								<delimiter>${*}</delimiter>
								<delimiter>@</delimiter>
							</delimiters>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/config/${kafka.mode}</directory>
									<filtering>true</filtering>
									<includes>
										<include>application.*</include>
										<include>*.json</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<!-- Start docker-compose with the correct configuration. Beware : this 
				one only stop docker-compose when running a mvn clean -->
			<id>autocompose</id>
			<build>
				<plugins>
					<plugin>
						<!-- Documentation is available there https://github.com/dkanejs/docker-compose-maven-plugin -->
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>up</id>
								<phase>process-resources</phase>
								<goals>
									<goal>up</goal>
								</goals>
								<configuration>
									<build>true</build>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
